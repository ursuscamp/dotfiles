#!/usr/zsh

#### COLORS

# Reset
COLOR_OFF='\033[0m'       # Text Reset

# Regular Colors
BLACK='\033[0;30m'        # Black
RED='\033[0;31m'          # Red
GREEN='\033[0;32m'        # Green
YELLOW='\033[0;33m'       # Yellow
BLUE='\033[0;34m'         # Blue
PURPLE='\033[0;35m'       # Purple
CYAN='\033[0;36m'         # Cyan
WHITE='\033[0;37m'        # White

# Bold
BBLACK='\033[1;30m'       # Black
BRED='\033[1;31m'         # Red
BGREEN='\033[1;32m'       # Green
BYELLOW='\033[1;33m'      # Yellow
BBLUE='\033[1;34m'        # Blue
BPURPLE='\033[1;35m'      # Purple
BCYAN='\033[1;36m'        # Cyan
BWHITE='\033[1;37m'       # White

# Underline
UBLACK='\033[4;30m'       # Black
URED='\033[4;31m'         # Red
UGREEN='\033[4;32m'       # Green
UYELLOW='\033[4;33m'      # Yellow
UBLUE='\033[4;34m'        # Blue
UPURPLE='\033[4;35m'      # Purple
UCYAN='\033[4;36m'        # Cyan


#### VARIABLES

export ZVM_VI_ESCAPE_BINDKEY=jk
export EDITOR=nvim
export VISUAL=nvim
export ZSH_PLUGIN_ROOT=$HOME/.local/share/zsh/plugins
export PATH=$HOME/bin:$HOME/.local/bin:$PATH
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_DEFAULT_OPTS="--multi --bind ctrl-y:accept"
export PGDATA=$HOME/.local/share/postgres
export BAT_THEME=Dracula
export MANPAGER='nvim +Man!'
AFTER_INIT_HAS_RUN=0

[[ -f $ZDOTDIR/envrc ]] && source $ZDOTDIR/envrc # Private environment variables can be loaded here.

##### OPTS

setopt histignorealldups


##### COMMAND INIT

# Load homebrew if on Linux
test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Load homebrew if on MacOS
test -d /opt/homebrew && eval "$(/opt/homebrew/bin/brew shellenv)"

eval "$(starship init zsh)"
eval "$(mise activate zsh)"


# Run these commands after zsh-vim-mode init
zvm_after_init ()
{
	eval "$(fzf --zsh)"
	bindkey '^[[Z' reverse-menu-complete
	bindkey '^y' autosuggest-accept
}

##### COMPLETIONS

fpath=($ZSH_PLUGIN_ROOT/zsh-completions/src $fpath)
autoload -U compinit && compinit
zstyle ':completion:*' menu select

##### ALIASES

alias ls="lsd"
alias lsl="lsd -larth"
alias lg="lazygit"
alias cat="bat"
alias neovim="cd ~/.config/nvim"
alias dotfiles="cd $HOME/Dev/dotfiles"
alias dfpush="gh auth switch && git push && gh auth switch" # Simpler pushing/pull dotfiles from work
alias dfpull="gh auth switch && git pull && gh auth switch"
alias kgp="kubectl get pods"
alias ch="cd ~/Dev/pmpclear-webapp"
alias aware="cd ~/Dev/pmpaware-webapp"
alias kccc="kubectl config current-context"
alias jil='jira issue list -a "$(jira me)" -q "sprint = P1"'
alias zsource="source $ZDOTDIR/.zshrc"
alias dc='docker compose'
alias dcup='docker compose up -d'

##### FUNCTIONS

ap ()
{
	export AWS_PROFILE=$(aws configure list-profiles | sort | fzf)
}

ksc ()
{
	kubectl config use-context $(kubectl config get-contexts | awk '{print $1}' | fzf)
}

kdpf ()
{
	pods=$(kgp | rg "$1" | cut -d " " -f 1)
	echo "The following pods will be deleted:\n"
	echo "$RED"$pods"$COLOR_OFF\n"
	echo "Do you wish to continue? (y/n)"
	read -r response
	if [[ $response == "y" ]]; then
		while read -r pod
		do
			echo "Deleting $pod"
			kubectl delete pod $pod
		done <<< $pods
	fi
	
}

gdb()
{
    git branch --list | fzf | xargs -n 1 git branch -D
} 

##### PLUGINS

load_plugin ()
{
	PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
	PLUGIN_DIR=$ZSH_PLUGIN_ROOT/$PLUGIN_NAME
	if [[ ! -d $PLUGIN_DIR ]]; then
		mkdir -p $PLUGIN_DIR
		git clone https://www.github.com/$1.git $PLUGIN_DIR
	fi
	source $PLUGIN_DIR/$PLUGIN_NAME.plugin.zsh
}

update_plugins ()
{
	for dir in $ZSH_PLUGIN_ROOT/*(N/); do
		echo "Updating $dir..."
		cd $dir && git pull
	done
	
	
}

load_plugin "zsh-users/zsh-completions"
load_plugin "jeffreytse/zsh-vi-mode"
load_plugin "zsh-users/zsh-autosuggestions"
load_plugin "zsh-users/zsh-syntax-highlighting"
